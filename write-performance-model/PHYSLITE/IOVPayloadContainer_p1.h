//////////////////////////////////////////////////////////
//   This class has been generated by TFile::MakeProject
//     (Wed Jul 23 14:25:42 2025 by ROOT version 6.36.02)
//      from the StreamerInfo in file PHYSLITE.rntuple
//////////////////////////////////////////////////////////


#ifndef IOVPayloadContainer_p1_h
#define IOVPayloadContainer_p1_h
class IOVPayloadContainer_p1;

#include "Rtypes.h"
#include "Riostream.h"
#include <vector>
#include "IOVPayloadContainer_p1.h"
#include "AttrListIndexes.h"
#include <string>

class IOVPayloadContainer_p1 {

public:
// Nested classes forward declaration.
class CondAttrListCollection_p1;
class CondAttrListEntry_p1;
class IOVRange_p1;

public:
// Nested classes declaration.
class IOVRange_p1 {

public:
// Nested classes declaration.

public:
// Data Members.
   ULong64_t   m_start;     //
   ULong64_t   m_stop;      //

   IOVRange_p1();
   IOVRange_p1(IOVRange_p1 && ) = default;
   IOVRange_p1 &operator=(const IOVRange_p1 & );
   IOVRange_p1(const IOVRange_p1 & );
   virtual ~IOVRange_p1();

};
class CondAttrListEntry_p1 {

public:
// Nested classes declaration.

public:
// Data Members.
   unsigned int m_channelNumber;    //
   unsigned int m_firstIndex;       //
   unsigned int m_lastIndex;        //
   IOVPayloadContainer_p1::IOVRange_p1 m_range;            //
   string                              m_name;             //

   CondAttrListEntry_p1();
   CondAttrListEntry_p1(CondAttrListEntry_p1 && ) = default;
   CondAttrListEntry_p1 &operator=(const CondAttrListEntry_p1 & );
   CondAttrListEntry_p1(const CondAttrListEntry_p1 & );
   virtual ~CondAttrListEntry_p1();

};
class CondAttrListCollection_p1 {

public:
// Nested classes declaration.

public:
// Data Members.
   vector<IOVPayloadContainer_p1::CondAttrListEntry_p1> m_attrLists;    //
   ULong64_t                                            m_start;        //
   ULong64_t                                            m_stop;         //
   bool                                                 m_hasRunLumiBlockTime;    //

   CondAttrListCollection_p1();
   CondAttrListCollection_p1(CondAttrListCollection_p1 && ) = default;
   CondAttrListCollection_p1 &operator=(const CondAttrListCollection_p1 & );
   CondAttrListCollection_p1(const CondAttrListCollection_p1 & );
   virtual ~CondAttrListCollection_p1();

};

public:
// Data Members.
   vector<IOVPayloadContainer_p1::CondAttrListCollection_p1> m_payloadVec;    //
   vector<AttrListIndexes>                                   m_attrIndexes;    //
   vector<bool>                                              m_bool;           //
   vector<char>                                              m_char;           //
   vector<unsigned char>                                     m_unsignedChar;    //
   vector<short>                                             m_short;           //
   vector<unsigned short>                                    m_unsignedShort;    //
   vector<int>                                               m_int;              //
   vector<unsigned int>                                      m_unsignedInt;      //
   vector<long>                                              m_long;             //
   vector<unsigned long>                                     m_unsignedLong;     //
   vector<Long64_t>                                          m_longLong;         //
   vector<ULong64_t>                                         m_unsignedLongLong;    //
   vector<float>                                             m_float;               //
   vector<double>                                            m_double;              //
   vector<string>                                            m_string;              //
   vector<ULong64_t>                                         m_date;                //
   vector<ULong64_t>                                         m_timeStamp;           //
   vector<string>                                            m_attrName;            //
   vector<unsigned int>                                      m_attrType;            //

   IOVPayloadContainer_p1();
   IOVPayloadContainer_p1(IOVPayloadContainer_p1 && ) = default;
   IOVPayloadContainer_p1 &operator=(const IOVPayloadContainer_p1 & );
   IOVPayloadContainer_p1(const IOVPayloadContainer_p1 & );
   virtual ~IOVPayloadContainer_p1();

};
#endif
