//////////////////////////////////////////////////////////
//   This class has been generated by TFile::MakeProject
//     (Wed Jul 23 14:25:42 2025 by ROOT version 6.36.02)
//      from the StreamerInfo in file PHYSLITE.rntuple
//////////////////////////////////////////////////////////


#ifndef DataVector_xAOD__CaloCluster_v1__h
#define DataVector_xAOD__CaloCluster_v1__h
namespace xAOD {
class CaloCluster_v1;
} // end of namespace.
template <typename T0> class DataVector;

#include "Rtypes.h"
#include "xAOD__CaloCluster_v1.h"

#ifndef template_DataVector_h
#define template_DataVector_h
template <typename T0> class DataVector {

public:
// Nested classes declaration.

public:
// Data Members.

   DataVector() {
   }
   DataVector(DataVector && ) = default;
   DataVector &operator=(const DataVector & rhs)
   {
   // This is NOT a copy operator=. This is actually a move operator= (for stl container's sake).
   // Use at your own risk!
   (void)rhs; // avoid warning about unused parameter
   return *this;
   }
   DataVector(const DataVector & rhs )
   {
   // This is NOT a copy constructor. This is actually a move constructor (for stl container's sake).
   // Use at your own risk!
   (void)rhs; // avoid warning about unused parameter
   }
   virtual ~DataVector() {
      }

};
#endif // generic template declaration
#endif
