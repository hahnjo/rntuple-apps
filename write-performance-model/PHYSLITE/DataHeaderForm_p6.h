//////////////////////////////////////////////////////////
//   This class has been generated by TFile::MakeProject
//     (Wed Jul 23 14:25:42 2025 by ROOT version 6.36.02)
//      from the StreamerInfo in file PHYSLITE.rntuple
//////////////////////////////////////////////////////////


#ifndef DataHeaderForm_p6_h
#define DataHeaderForm_p6_h
class DataHeaderForm_p6;

#include "Rtypes.h"
#include "Riostream.h"
#include <vector>
#include "DataHeaderForm_p6.h"
namespace std {} using namespace std;
namespace std {} using namespace std;
namespace std {} using namespace std;
#include <string>
#include "Guid.h"

class DataHeaderForm_p6 {

public:
// Nested classes forward declaration.
class DbRecord;
class ObjRecord;

public:
// Nested classes declaration.
class ObjRecord {

public:
// Nested classes declaration.

public:
// Data Members.
   Guid        guid;        //
   string      cont;        //
   string      key;         //
   unsigned int clid;        //
   Long64_t     oid1;        //

   ObjRecord();
   ObjRecord(ObjRecord && ) = default;
   ObjRecord &operator=(const ObjRecord & );
   ObjRecord(const ObjRecord & );
   virtual ~ObjRecord();

};
class DbRecord {

public:
// Nested classes declaration.

public:
// Data Members.
   Guid        fid;         //
   unsigned int tech;        //

   DbRecord();
   DbRecord(DbRecord && ) = default;
   DbRecord &operator=(const DbRecord & );
   DbRecord(const DbRecord & );
   virtual ~DbRecord();

};

public:
// Data Members.
   vector<DataHeaderForm_p6::DbRecord> m_dbRecords;    //
   vector<DataHeaderForm_p6::ObjRecord> m_objRecords;    //
   vector<vector<string> >              m_objAlias;      //
   vector<vector<unsigned int> >        m_objSymLinks;    //
   vector<vector<unsigned int> >        m_objHashes;      //
   unsigned int                         m_version;        //
   string                               m_processTag;     //

   DataHeaderForm_p6();
   DataHeaderForm_p6(DataHeaderForm_p6 && ) = default;
   DataHeaderForm_p6 &operator=(const DataHeaderForm_p6 & );
   DataHeaderForm_p6(const DataHeaderForm_p6 & );
   virtual ~DataHeaderForm_p6();

};
#endif
